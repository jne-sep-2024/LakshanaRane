{"ast":null,"code":"var _jsxFileName = \"/home/ttpl-lnve15-0118/Desktop/Trainings/Modules/LakshanaRane/Module_2/20_authentication/frontend/src/pages/Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams();\n  const mode = searchParams.get('mode') || 'login';\n\n  // to handle the mode error\n  if (mode !== 'login' || mode !== 'signup') {\n    throw json({\n      message: 'Unsuported mode.'\n    }, {\n      status: 422\n    });\n  }\n  //data object that is returned by formData()\n  const data = request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n\n  // /sending a request to my backend-> do this with the fetch func^\n\n  fetch('http://localhost:8080/' + mode);\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","fetch","$RefreshReg$"],"sources":["/home/ttpl-lnve15-0118/Desktop/Trainings/Modules/LakshanaRane/Module_2/20_authentication/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\nimport { json } from 'react-router-dom';\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({request}){\n\n  const searchParams= new URL(request.url).searchParams();\n  const mode  = searchParams.get('mode') || 'login';\n\n\n  // to handle the mode error\n  if( mode !=='login' || mode !=='signup'){\n    throw json ({message:'Unsuported mode.'}  ,{status:422});\n  }\n  //data object that is returned by formData()\n  const data = request.formData();\n  const authData={\n    email: data.get('email'),\n    password:data.get('password')\n\n  }\n\n  // /sending a request to my backend-> do this with the fetch func^\n\n  fetch('http://localhost:8080/' + mode);\n\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACH,QAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EAErC,MAAMC,YAAY,GAAE,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY,CAAC,CAAC;EACvD,MAAMG,IAAI,GAAIH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;;EAGjD;EACA,IAAID,IAAI,KAAI,OAAO,IAAIA,IAAI,KAAI,QAAQ,EAAC;IACtC,MAAMd,IAAI,CAAE;MAACgB,OAAO,EAAC;IAAkB,CAAC,EAAG;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAC1D;EACA;EACA,MAAMC,IAAI,GAAGR,OAAO,CAACS,QAAQ,CAAC,CAAC;EAC/B,MAAMC,QAAQ,GAAC;IACbC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAACJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAE9B,CAAC;;EAED;;EAEAQ,KAAK,CAAC,wBAAwB,GAAGT,IAAI,CAAC;AAExC;AAAC,IAAAN,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}